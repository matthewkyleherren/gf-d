{"componentChunkName":"component---src-templates-single-index-js","path":"/blog/simplify-with-dependency-injection-with-uber-fx","result":{"pageContext":{"id":"cG9zdDo2NjI1","databaseId":6625,"title":"How to Simplify Dependency Injection Using Uber FX","uri":"/simplify-with-dependency-injection-with-uber-fx/","slug":"simplify-with-dependency-injection-with-uber-fx","date":"2020-11-24T14:27:24","excerpt":"<p>At OpenWeb, our proprietary technology is built for performance. Our infrastructure was designed for speed and scale to support billions of conversations in real-time.&nbsp; In this Q&amp;A, Erez Levi, Tech Lead of the Infrastructure Team at OpenWeb, provides an in-depth look at the way our engineering team simplified dependency management on our Go services and<a class=\"moretag\" href=\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/\">Read More</a></p>\n","content":"\n<p>At OpenWeb, our proprietary technology is built for performance. Our infrastructure was designed for speed and scale to support billions of conversations in real-time.&nbsp;</p>\n\n\n\n<p>In this Q&amp;A, Erez Levi, Tech Lead of the Infrastructure Team at OpenWeb, provides an in-depth look at the way our engineering team simplified dependency management on our Go services and got better visibility into code dependencies.</p>\n\n\n\n<h2>TL;DR</h2>\n\n\n\n<p><a href=\"https://github.com/ErezLevip/fx-medium-example\">Here</a> you can find the full example on Github.</p>\n\n\n\n<p><a href=\"https://github.com/uber-go/fx\">Here</a> you can find a link to Uber’s FX repository.</p>\n\n\n\n<h2>Who am I, and why should you care?</h2>\n\n\n\n<p>I’m Erez, the Tech Lead of the Infrastructure Team at OpenWeb, and I have been writing Go for the past 3 years.</p>\n\n\n\n<p>I came to Go from a C# background, where you get a lot of “magic” behind the scenes with libraries like Unity Dependency Injection. When I made the move to this new language, I missed the ability to inject what I need without worrying about all the constructors I’ll have to change.</p>\n\n\n\n<p>As the services I wrote got more complex, I got to a point where it was crucial to simplify the dependency injection to ease testing, clear the dependency graph, and get better visibility on our code dependencies.</p>\n\n\n\n<h2>Why is dependency injection in Go so difficult?</h2>\n\n\n\n<p>At face value, managing dependencies on your own isn’t such a difficult task.</p>\n\n\n\n<p>Your database needs a logger so that you can trace what’s happening, so you pass a logger to it. Your business service needs the database so that it can access data, so you pass the database to it. Then you realize that you also want to use your logger in the business logic service; tracing is very important after all. And to be more efficient, you want to add a cache to your service so that you aren’t always going to the database. That cache should probably have a logger as well.</p>\n\n\n\n<p>All of these things add up, and you end up passing instances of everything here and there, getting lost in the mayhem of it all. After some time working on your project, you’re left with a complicated mess, and that’s just to start up the service.</p>\n\n\n\n<p>So here are the problems we face:</p>\n\n\n\n<ol><li>Long initialization functions.</li><li>Difficulties injecting the same dependencies that only need to be initialized only once (loggers, etc.)</li><li>Complicated dependency graph.</li><li>Adding new dependencies forces you to change multiple function signatures.</li><li>Replacing real dependencies with mocks while testing forces you to duplicate all of the initialization functions for the mocks</li></ol>\n\n\n\n<h2>So, how can we solve these problems? Let’s dive in</h2>\n\n\n\n<p>First, let’s create a simple server using fasthttp and fasthttprouter:</p>\n\n\n\n<p>This doesn’t seem so tricky, so let’s spice things up by caching the result and logging any errors we might encounter. In order to do this, we’ll start by converting the functional handler into a struct that contains our dependencies, a logger and a cache:</p>\n\n\n\n<p>And once we have this, we implement a Handle method that matches the signature of a fasthttp Handler:</p>\n\n\n\n<p>Now, we have our handler, but we need to make sure to make some simple initializers for the logger and the cache client (we’ll be using Redis for our cache in this case):</p>\n\n\n\n<p>Let’s put all of this together in a main function and see how it looks now:</p>\n\n\n\n<p>We can see here that we have a handler and a cache. Both have dependencies, some shared (logger) and some exclusive (Redis client). Of course, in real-life scenarios, we can have a lot more. So what can we do to simplify this?</p>\n\n\n\n<h2>Fx to the rescue!</h2>\n\n\n\n<p>Fx has two main functionalities, <strong>Providers</strong> and <strong>Invokers</strong>.</p>\n\n\n\n<p><strong>Providers</strong> are our “Constructors”, they provide a dependency to others. On startup, Fx creates a container, and we register our constructors to it as Providers. That would look something like this:</p>\n\n\n\n<p>Once we have our Providers, we create our <strong>Invokers</strong>. These are methods we want to run using the provided values that we just gave Fx. The Invokers can receive what Fx calls a Lifecycle, a struct that allows us to subscribe to specific behaviors such as OnStart and OnStop.</p>\n\n\n\n<p>Let’s take the end of our main function, where we created the HTTP server, and wrap it in a small function that can be used as an Fx Invoker. We’ll pass in the Fx Lifecycle, and the main dependency that the server needs.</p>\n\n\n\n<p>Now we add this function as an Invoker in our Fx container:</p>\n\n\n\n<p>And finally, just to make things interesting, let’s add a simple listener on signals so we can quickly stop our server, and we’ll be ready to go!</p>\n\n\n\n<h2>Conclusions:</h2>\n\n\n\n<p>So, let’s take a look at all of our problems from the beginning, and see how we tackled them.</p>\n\n\n\n<p>1. Long initialization functions.</p>\n\n\n\n<p>Fx simplified our initializations since we could easily inject edge dependencies of the dependency graph without knowing the full lifecycle.</p>\n\n\n\n<p>2. Difficulties injecting the same dependencies that only need to be initialized only once (loggers, etc.).</p>\n\n\n\n<p>Fx was a game-changer when it came to initializing once and injecting a lot. We only had to create a <strong>Provider</strong> one time, and Fx took care of passing it to all of the necessary places.</p>\n\n\n\n<p>3. Complicated dependency graph.</p>\n\n\n\n<p>Fx didn’t actually solve the complexity of the dependency graph, but it gives us the ability to care less about it. We only had to tell Fx what each constructor needed, and it took care of the rest!</p>\n\n\n\n<p>4. Adding new dependencies forces you to change multiple function signatures.</p>\n\n\n\n<p>Fx solved the ease of adding or using dependencies that are already registered to the container; all we needed to do was add the dependencies in the constructor of the type, and Fx took care of injecting all necessary dependencies to each constructor for us.</p>\n\n\n\n<p>5. Replacing real dependencies with mocks while testing forces you to duplicate all of the initialization functions for the mocks.</p>\n\n\n\n<p>Fx solved the ease of replacing real dependencies with mock ones; we could create a separate container for tests that uses the mock dependencies to test various scenarios.</p>\n\n\n\n<h2>If You Want To Dive In A Little Deeper:</h2>\n\n\n\n<ol><li>Fx is a heavy user of reflection. We were ready to pay the cost of reflection during the application startup time, but this is important to remember. Reflection in Go has a heavy cost.</li><li>Using reflection, Fx gets the type of the Provider that needs to be injected. When using interfaces, you can automatically inject only one implementation of that interface. This can easily be solved in a few different ways, but it is something to keep in mind as you consider the move to Fx.</li><li>The cost of reflection is always important to consider when it comes to low latency systems if used on runtime.</li></ol>\n\n\n\n<p>* If you want to dive into a more complete example, take a look <a href=\"https://github.com/ErezLevip/fx-medium-example\">here</a>.</p>\n\n\n\n<p><a href=\"https://www.openweb.com/technology/\"><em>Learn more about OpenWeb’s technology solutions</em></a><em>.</em></p>\n","owHidePublishDate":false,"seo":{"canonical":"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/","title":"How to Simplify Go Dependency Injection Using Uber FX | OpenWeb","metaDesc":"At OpenWeb, our proprietary tech is built for performance. Take a look at how look our engineering team simplified dependency management.","focuskw":"go dependency injection","metaRobotsNoindex":"index","metaRobotsNofollow":"follow","opengraphAuthor":"","opengraphDescription":"At OpenWeb, our proprietary tech is built for performance. Take a look at how look our engineering team simplified dependency management.","opengraphTitle":"How to Simplify Go Dependency Injection Using Uber FX | OpenWeb","opengraphImage":{"sourceUrl":"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1.jpg"},"opengraphUrl":"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/","opengraphSiteName":"OpenWeb","opengraphPublishedTime":"2020-11-24T14:27:24+00:00","opengraphModifiedTime":"2021-06-15T21:18:31+00:00","twitterTitle":"","twitterDescription":"","twitterImage":null,"schema":{"raw":"{\"@context\":\"https://schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https://wordpress.openweb.com/#organization\",\"name\":\"OpenWeb\",\"url\":\"https://wordpress.openweb.com/\",\"sameAs\":[\"https://www.facebook.com/OpenWebHQ\",\"https://www.linkedin.com/company/openwebhq/\",\"https://twitter.com/OpenWebHQ\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https://wordpress.openweb.com/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https://www.openweb.com/uploads/2020/06/logo-header-desktop@3x.png\",\"contentUrl\":\"https://www.openweb.com/uploads/2020/06/logo-header-desktop@3x.png\",\"width\":573,\"height\":165,\"caption\":\"OpenWeb\"},\"image\":{\"@id\":\"https://wordpress.openweb.com/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https://wordpress.openweb.com/#website\",\"url\":\"https://wordpress.openweb.com/\",\"name\":\"OpenWeb\",\"description\":\"It all starts with a conversation\",\"publisher\":{\"@id\":\"https://wordpress.openweb.com/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https://wordpress.openweb.com/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1.jpg\",\"contentUrl\":\"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1.jpg\",\"width\":1140,\"height\":460},{\"@type\":\"WebPage\",\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#webpage\",\"url\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/\",\"name\":\"How to Simplify Go Dependency Injection Using Uber FX | OpenWeb\",\"isPartOf\":{\"@id\":\"https://wordpress.openweb.com/#website\"},\"primaryImageOfPage\":{\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#primaryimage\"},\"datePublished\":\"2020-11-24T14:27:24+00:00\",\"dateModified\":\"2021-06-15T21:18:31+00:00\",\"description\":\"At OpenWeb, our proprietary tech is built for performance. Take a look at how look our engineering team simplified dependency management.\",\"breadcrumb\":{\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://wordpress.openweb.com/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Tech\",\"item\":\"https://wordpress.openweb.com/category/tech/\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"How to Simplify Dependency Injection Using Uber FX\"}]},{\"@type\":\"Article\",\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#article\",\"isPartOf\":{\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#webpage\"},\"author\":{\"@id\":\"https://wordpress.openweb.com/#/schema/person/ef8a2b19ae14de50bb9d96696e2d83de\"},\"headline\":\"How to Simplify Dependency Injection Using Uber FX\",\"datePublished\":\"2020-11-24T14:27:24+00:00\",\"dateModified\":\"2021-06-15T21:18:31+00:00\",\"mainEntityOfPage\":{\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#webpage\"},\"wordCount\":1169,\"commentCount\":0,\"publisher\":{\"@id\":\"https://wordpress.openweb.com/#organization\"},\"image\":{\"@id\":\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#primaryimage\"},\"thumbnailUrl\":\"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1.jpg\",\"keywords\":[\"C#\",\"Go\",\"software engineering\",\"Technology\",\"uber fx\"],\"articleSection\":[\"Tech\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https://wordpress.openweb.com/simplify-with-dependency-injection-with-uber-fx/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https://wordpress.openweb.com/#/schema/person/ef8a2b19ae14de50bb9d96696e2d83de\",\"name\":\"Ben Lang\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://wordpress.openweb.com/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https://secure.gravatar.com/avatar/63f73df205a774eed57e879740b85c89?s=96&d=mm&r=g\",\"contentUrl\":\"https://secure.gravatar.com/avatar/63f73df205a774eed57e879740b85c89?s=96&d=mm&r=g\",\"caption\":\"Ben Lang\"}}]}"}},"categories":{"edges":[{"node":{"name":"Tech","uri":"/category/tech/","posts":{"edges":[{"node":{"id":"cG9zdDo5NTcx","databaseId":9571,"title":"Where Publishers Can Maximize Mobile Audience Engagement","uri":"/where-publishers-can-maximize-mobile-audience-engagement/","date":"2021-11-12T14:28:16","categories":{"edges":[{"node":{"name":"Articles","uri":"/category/articles/"}},{"node":{"name":"Tech","uri":"/category/tech/"}}]},"author":{"node":{"name":"OpenWeb","uri":"/author/theowadmin/"}},"large":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/11/inapp-1140x460.jpg","title":"inapp","altText":"","mediaDetails":{"width":2560,"height":1033}}},"medium":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/11/inapp-555x332.jpg","title":"inapp","altText":"","mediaDetails":{"width":2560,"height":1033}}},"thumbnail":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/11/inapp-150x150.jpg","title":"inapp","altText":"","mediaDetails":{"width":2560,"height":1033}}},"multipleAuthors":{"authors":null}}},{"node":{"id":"cG9zdDo5MjYy","databaseId":9262,"title":"Local News Can Win Their Uphill Battle","uri":"/local-news-can-win-their-uphill-battle/","date":"2021-09-14T00:17:54","categories":{"edges":[{"node":{"name":"Articles","uri":"/category/articles/"}},{"node":{"name":"Tech","uri":"/category/tech/"}}]},"author":{"node":{"name":"OpenWeb","uri":"/author/theowadmin/"}},"large":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/09/utsav-srestha-HeNrEdA4Zp4-unsplash-1140x460-1.jpg","title":"utsav-srestha-HeNrEdA4Zp4-unsplash-1140×460","altText":"","mediaDetails":{"width":1140,"height":460}}},"medium":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/09/utsav-srestha-HeNrEdA4Zp4-unsplash-1140x460-1-555x332.jpg","title":"utsav-srestha-HeNrEdA4Zp4-unsplash-1140×460","altText":"","mediaDetails":{"width":1140,"height":460}}},"thumbnail":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/09/utsav-srestha-HeNrEdA4Zp4-unsplash-1140x460-1-150x150.jpg","title":"utsav-srestha-HeNrEdA4Zp4-unsplash-1140×460","altText":"","mediaDetails":{"width":1140,"height":460}}},"multipleAuthors":{"authors":null}}},{"node":{"id":"cG9zdDo4Njk4","databaseId":8698,"title":"Building Audience Starts With Speed: OpenWeb Is 48% Faster Than The Alternative.","uri":"/building-audience-starts-with-speed/","date":"2021-08-30T15:33:11","categories":{"edges":[{"node":{"name":"Articles","uri":"/category/articles/"}},{"node":{"name":"Tech","uri":"/category/tech/"}}]},"author":{"node":{"name":"OpenWeb","uri":"/author/rtcamp/"}},"large":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/08/final-email-image-1.jpg","title":"Print","altText":"","mediaDetails":{"width":1128,"height":451}}},"medium":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/08/final-email-image-1-555x332.jpg","title":"Print","altText":"","mediaDetails":{"width":1128,"height":451}}},"thumbnail":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/08/final-email-image-1-150x150.jpg","title":"Print","altText":"","mediaDetails":{"width":1128,"height":451}}},"multipleAuthors":{"authors":null}}}]}}}]},"author":{"node":{"name":"Ben Lang","uri":"/author/ben-l/"}},"large":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1.jpg","title":"Engineering-LO1-1140×460-1","altText":"","mediaDetails":{"width":1140,"height":460}}},"medium":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1-555x332.jpg","title":"Engineering-LO1-1140×460-1","altText":"","mediaDetails":{"width":1140,"height":460}}},"thumbnail":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2020/11/Engineering-LO1-1140x460-1-150x150.jpg","title":"Engineering-LO1-1140×460-1","altText":"","mediaDetails":{"width":1140,"height":460}}},"multipleAuthors":{"authors":null},"hubSpotDownloadFormPageMeta":{"hubspotDownloadForm":{"downloadLabel":"Click to download","downloadLink":null,"fieldGroupName":"hubspot_download_form","formHeadline":"Read more about our work","formId":null,"formPortalid":"5731985","thankYouMessage":"<h2>Thanks for submitting the form.</h2>\n<p>Your content will be arriving via email.</p>\n"}},"relatedPosts":[{"id":"cG9zdDo5NTcx","databaseId":9571,"title":"Where Publishers Can Maximize Mobile Audience Engagement","uri":"/where-publishers-can-maximize-mobile-audience-engagement/","date":"2021-11-12T14:28:16","categories":{"edges":[{"node":{"name":"Articles","uri":"/category/articles/"}},{"node":{"name":"Tech","uri":"/category/tech/"}}]},"author":{"node":{"name":"OpenWeb","uri":"/author/theowadmin/"}},"large":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/11/inapp-1140x460.jpg","title":"inapp","altText":"","mediaDetails":{"width":2560,"height":1033}}},"medium":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/11/inapp-555x332.jpg","title":"inapp","altText":"","mediaDetails":{"width":2560,"height":1033}}},"thumbnail":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/11/inapp-150x150.jpg","title":"inapp","altText":"","mediaDetails":{"width":2560,"height":1033}}},"multipleAuthors":{"authors":null}},{"id":"cG9zdDo5MjYy","databaseId":9262,"title":"Local News Can Win Their Uphill Battle","uri":"/local-news-can-win-their-uphill-battle/","date":"2021-09-14T00:17:54","categories":{"edges":[{"node":{"name":"Articles","uri":"/category/articles/"}},{"node":{"name":"Tech","uri":"/category/tech/"}}]},"author":{"node":{"name":"OpenWeb","uri":"/author/theowadmin/"}},"large":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/09/utsav-srestha-HeNrEdA4Zp4-unsplash-1140x460-1.jpg","title":"utsav-srestha-HeNrEdA4Zp4-unsplash-1140×460","altText":"","mediaDetails":{"width":1140,"height":460}}},"medium":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/09/utsav-srestha-HeNrEdA4Zp4-unsplash-1140x460-1-555x332.jpg","title":"utsav-srestha-HeNrEdA4Zp4-unsplash-1140×460","altText":"","mediaDetails":{"width":1140,"height":460}}},"thumbnail":{"node":{"sourceUrl":"https://www.openweb.com/uploads/2021/09/utsav-srestha-HeNrEdA4Zp4-unsplash-1140x460-1-150x150.jpg","title":"utsav-srestha-HeNrEdA4Zp4-unsplash-1140×460","altText":"","mediaDetails":{"width":1140,"height":460}}},"multipleAuthors":{"authors":null}}],"form":{"title":"Subscribe to our blog","portalId":"5731985","formId":"11f68969-1b7e-490f-8883-b20247ead142"},"siteUrl":"https://www.openweb.com","postUri":"/blog/simplify-with-dependency-injection-with-uber-fx","singlePostHubSpotForm":{"downloadLabel":"Click to download","downloadLink":null,"fieldGroupName":"hubspot_download_form","formHeadline":"Read more about our work","formId":null,"formPortalid":"5731985","thankYouMessage":"<h2>Thanks for submitting the form.</h2>\n<p>Your content will be arriving via email.</p>\n"}}},"staticQueryHashes":["199889258","2615726974","2938868345"]}